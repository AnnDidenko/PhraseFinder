// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Phrase_Finder.Domain;

namespace Phrase_Finder.Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220527170459_AddDictionaryIdField")]
    partial class AddDictionaryIdField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.Dictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Topic")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Dictionaries");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.EnglishWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DictionaryId")
                        .HasColumnType("integer");

                    b.Property<string>("PartOfLanguage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EnglishWords");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateOfRecall")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DictionaryId")
                        .HasColumnType("integer");

                    b.Property<int?>("EnglishWordId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryId");

                    b.HasIndex("EnglishWordId");

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.TranslationalWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DictionaryId")
                        .HasColumnType("integer");

                    b.Property<string>("PartOfLanguage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TranslationId")
                        .HasColumnType("integer");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TranslationId");

                    b.ToTable("TranslationalWords");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Subtitles")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("YouTubeVideoId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.Dictionary", b =>
                {
                    b.HasOne("Phrase_Finder.Domain.Entities.User", null)
                        .WithMany("Dictionaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.Translation", b =>
                {
                    b.HasOne("Phrase_Finder.Domain.Entities.Dictionary", "Dictionary")
                        .WithMany("Translations")
                        .HasForeignKey("DictionaryId");

                    b.HasOne("Phrase_Finder.Domain.Entities.EnglishWord", "EnglishWord")
                        .WithMany()
                        .HasForeignKey("EnglishWordId");

                    b.Navigation("Dictionary");

                    b.Navigation("EnglishWord");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.TranslationalWord", b =>
                {
                    b.HasOne("Phrase_Finder.Domain.Entities.Translation", null)
                        .WithMany("TranslationalWords")
                        .HasForeignKey("TranslationId");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.Dictionary", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.Translation", b =>
                {
                    b.Navigation("TranslationalWords");
                });

            modelBuilder.Entity("Phrase_Finder.Domain.Entities.User", b =>
                {
                    b.Navigation("Dictionaries");
                });
#pragma warning restore 612, 618
        }
    }
}
